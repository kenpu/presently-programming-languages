{"type":"article","source":"draft:\n....................\nType System","children":[{"type":"page","source":"About types","children":[{"type":"section","source":"slide:\n...............\nDraft","children":[{"type":"box","layout":"horizontal","source":"","children":[{"type":"markdown","source":"- The need for a type system.\n- Primitive types\n- Enumeration\n- Unit\n- Composit types\n\t- List\n\t- Records\n    - Dictionaries\n- Option\n- Recursive types","uuid":"3eb7e554-c814-4968-8777-73d306fbe7ac","version":280},{"type":"markdown","source":"- Subtype\n- Class hierarchy\n- Interfaces\n- Unified type system (pure OOP)\n- Function types\n- Covariant and contravariant types\n","uuid":"cf7d1be2-1e71-407c-92f7-75f77521dac7","version":182},{"type":"markdown","source":"- Expressions\n- Instances of types\n- Type checking\n- Type inference","uuid":"5b25de89-2e55-48d4-b892-9e6eea574132","version":135}],"uuid":"d0279baf-edf6-4087-9ad8-27a7e1fd45b8","version":600}],"uuid":"4309b248-aaa3-4e32-bdcc-1bb0d478a49b","version":653}],"uuid":"c76db626-1c97-4c30-9521-24dae712046d","version":668}],"uuid":"fea6f98e-4066-4e5a-96da-e5b3cbbdddb9","modified":true,"version":717,"history":4}